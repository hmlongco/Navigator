{"sections":[],"abstract":[{"type":"text","text":"Provides enumerated navigation types than can be translated into Views."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"kind":"text","text":" "},{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"NavigationDestination","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Hashable","preciseIdentifier":"s:SH","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Identifiable","kind":"typeIdentifier","preciseIdentifier":"s:s12IdentifiableP"},{"kind":"text","text":", "},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"NavigationDestination types can be used in order to push and present views as needed."}]},{"inlineContent":[{"text":"This can happen using…","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Standard SwiftUI modifiers like ","type":"text"},{"type":"codeVoice","code":"NavigationLink(value:label:)"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Imperatively by asking a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Navigator"},{"type":"text","text":" to perform the desired action."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Or via a deep link action enabled by a "},{"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationURLHandler","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"text":"They’re one of the core elements that make Navigator possible.","type":"text"}],"type":"paragraph"},{"level":3,"anchor":"Defining-Navigation-Destinations","type":"heading","text":"Defining Navigation Destinations"},{"inlineContent":[{"type":"text","text":"Destinations are typically just a simple list of enumerated values."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["public enum HomeDestinations {","    case page2","    case page3","    case pageN(Int)","}"]},{"inlineContent":[{"text":"Along with an extension that provides the correct view for a specific case.","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["extension HomeDestinations: NavigationDestination {","    public var body: some View {","        switch self {","        case .page2:","            HomePage2View()","        case .page3:","            HomePage3View()","        case .pageN(let value):","            HomePageNView(number: value)","        }","    }","}"]},{"inlineContent":[{"text":"Yes, NavigationDestination’s are Views!","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Note how associated values can be used to pass parameters to views as needed.","type":"text"}],"type":"paragraph"},{"name":"Important","style":"important","content":[{"type":"paragraph","inlineContent":[{"text":"As of 6.2 it looks like ","type":"text"},{"code":"NavigationDestination","type":"codeVoice"},{"text":" conformance ","type":"text"},{"inlineContent":[{"type":"text","text":"must"}],"type":"strong"},{"text":" be done as an extension and ","type":"text"},{"inlineContent":[{"text":"not","type":"text"}],"type":"strong"},{"text":" on the original","type":"text"},{"type":"text","text":" "},{"type":"text","text":"enumeration. This aligns with Swift 6.2’s requirement that protocol isolation must be explicit at the conformance site."}]}],"type":"aside"},{"level":3,"anchor":"Using-Navigation-Destinations","type":"heading","text":"Using Navigation Destinations"},{"inlineContent":[{"type":"text","text":"This can be done via using a standard SwiftUI "},{"code":"NavigationLink(value:label:)","type":"codeVoice"},{"type":"text","text":" view."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["NavigationLink(value: HomeDestinations.page3) {","    Text(\"Link to Home Page 3!\")","}"]},{"inlineContent":[{"type":"text","text":"Or imperatively by asking a Navigator to perform the desired action."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["Button(\"Button Navigate to Home Page 55\") {","    navigator.navigate(to: HomeDestinations.pageN(55))","}"]},{"text":"Registering Navigation Destinations","type":"heading","level":3,"anchor":"Registering-Navigation-Destinations"},{"inlineContent":[{"type":"text","text":"Like traditional "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" destination types, "},{"type":"codeVoice","code":"NavigationDestination"},{"type":"text","text":" types need to be registered with the enclosing"},{"type":"text","text":" "},{"type":"text","text":"navigation stack in order for standard "},{"type":"codeVoice","code":"NavigationLink(value:label:)"},{"type":"text","text":" transitions to work correctly."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"But since each "},{"type":"codeVoice","code":"NavigationDestination"},{"type":"text","text":" already defines the view to be provided, registering destination types can be done"},{"type":"text","text":" "},{"type":"text","text":"using a simple one-line view modifier."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["ManagedNavigationStack {","    HomeView()","        .navigationDestination(HomeDestinations.self)","}"]},{"inlineContent":[{"type":"text","text":"This also makes using the same destination type with more than one navigation stack a lot easier."}],"type":"paragraph"},{"text":"Navigation Methods","type":"heading","level":3,"anchor":"Navigation-Methods"},{"inlineContent":[{"type":"codeVoice","code":"NavigationDestination"},{"text":" can also be extended to provide a distinct ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationMethod"},{"text":" for each enumerated type.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["extension HomeDestinations: NavigationDestination {","    public var method: NavigationMethod {","        switch self {","        case .page3:","            .sheet","        default:","            .push","        }","    }","}"]},{"inlineContent":[{"type":"text","text":"In this case, should "},{"type":"codeVoice","code":"navigator.navigate(to: HomeDestinations.page3)"},{"type":"text","text":" be called, Navigator will automatically present that view in a"},{"type":"text","text":" "},{"type":"text","text":"sheet. All other views will be pushed onto the navigation stack."}],"type":"paragraph"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When using "},{"type":"codeVoice","code":"NavigationLink(value:label:)"},{"type":"text","text":" the method will be ignored and SwiftUI will push"},{"type":"text","text":" "},{"type":"text","text":"the value onto the navigation stack as it would normally."}]}],"style":"important","name":"Important"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/NavigatorUI\/documentation\/NavigatorUI"]]},"identifier":{"url":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/navigatorui\/navigationdestination"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"symbolKind":"protocol","modules":[{"name":"NavigatorUI"}],"role":"symbol","title":"NavigationDestination","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NavigationDestination"}],"externalID":"s:11NavigatorUI21NavigationDestinationP","navigatorTitle":[{"text":"NavigationDestination","kind":"identifier"}],"roleHeading":"Protocol"},"topicSections":[{"anchor":"Instance-Properties","identifiers":["doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination\/method","doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination\/receiveResumeType"],"generated":true,"title":"Instance Properties"},{"anchor":"Instance-Methods","identifiers":["doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination\/asAnyView()","doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination\/callAsFunction()"],"title":"Instance Methods","generated":true}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/NavigatorUI\/SQ","doc:\/\/NavigatorUI\/SH","doc:\/\/NavigatorUI\/s12IdentifiableP","doc:\/\/NavigatorUI\/7SwiftUI4ViewP"],"type":"inheritsFrom","title":"Inherits From"}],"references":{"doc://NavigatorUI/documentation/NavigatorUI/NavigationMethod":{"role":"symbol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NavigationMethod"}],"abstract":[{"text":"Defines the desired presentation mechanism for a given ","type":"text"},{"code":"NavigationDestination","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationMethod","title":"NavigationMethod","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NavigationMethod","kind":"identifier"}],"url":"\/documentation\/navigatorui\/navigationmethod"},"doc://NavigatorUI/documentation/NavigatorUI/Navigator":{"navigatorTitle":[{"text":"Navigator","kind":"identifier"}],"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Navigator","role":"symbol","url":"\/documentation\/navigatorui\/navigator","abstract":[{"text":"Every ManagedNavigationStack has a Navigator to manage it.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Navigator"}],"title":"Navigator","kind":"symbol","type":"topic"},"doc://NavigatorUI/documentation/NavigatorUI/NavigationDestination/callAsFunction()":{"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination\/callAsFunction()","title":"callAsFunction()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"callAsFunction","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7AnyViewV","text":"AnyView"}],"kind":"symbol","abstract":[{"type":"text","text":"Convenience shortcut to implicitly return AnyView."}],"type":"topic","url":"\/documentation\/navigatorui\/navigationdestination\/callasfunction()","role":"symbol"},"doc://NavigatorUI/documentation/NavigatorUI":{"abstract":[{"text":"Managed NavigationStacks for SwiftUI.","type":"text"}],"url":"\/documentation\/navigatorui","kind":"symbol","role":"collection","title":"NavigatorUI","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI","type":"topic"},"doc://NavigatorUI/documentation/NavigatorUI/NavigationDestination/asAnyView()":{"url":"\/documentation\/navigatorui\/navigationdestination\/asanyview()","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination\/asAnyView()","title":"asAnyView()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asAnyView","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyView","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7AnyViewV"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Convenience function explicitly returns AnyView."}]},"doc://NavigatorUI/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/NavigatorUI\/SQ"},"doc://NavigatorUI/documentation/NavigatorUI/NavigationDestination/receiveResumeType":{"required":true,"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination\/receiveResumeType","title":"receiveResumeType","defaultImplementations":1,"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"receiveResumeType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NavigationReceiveResumeType","preciseIdentifier":"s:11NavigatorUI27NavigationReceiveResumeTypeO"}],"abstract":[{"type":"text","text":"Can be overridden to define a specific send resume type for each destination."}],"type":"topic","url":"\/documentation\/navigatorui\/navigationdestination\/receiveresumetype","role":"symbol","kind":"symbol"},"doc://NavigatorUI/s12IdentifiableP":{"identifier":"doc:\/\/NavigatorUI\/s12IdentifiableP","type":"unresolvable","title":"Swift.Identifiable"},"doc://NavigatorUI/documentation/NavigatorUI/NavigationDestination":{"url":"\/documentation\/navigatorui\/navigationdestination","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NavigationDestination"}],"role":"symbol","type":"topic","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination","navigatorTitle":[{"kind":"identifier","text":"NavigationDestination"}],"abstract":[{"type":"text","text":"Provides enumerated navigation types than can be translated into Views."}],"kind":"symbol","title":"NavigationDestination"},"doc://NavigatorUI/documentation/NavigatorUI/NavigationURLHandler":{"url":"\/documentation\/navigatorui\/navigationurlhandler","title":"NavigationURLHandler","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationURLHandler","navigatorTitle":[{"text":"NavigationURLHandler","kind":"identifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NavigationURLHandler","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[{"text":"Provides Deep Linking support.","type":"text"}]},"doc://NavigatorUI/SH":{"type":"unresolvable","identifier":"doc:\/\/NavigatorUI\/SH","title":"Swift.Hashable"},"doc://NavigatorUI/7SwiftUI4ViewP":{"identifier":"doc:\/\/NavigatorUI\/7SwiftUI4ViewP","title":"SwiftUICore.View","type":"unresolvable"},"doc://NavigatorUI/documentation/NavigatorUI/NavigationDestination/method":{"required":true,"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination\/method","title":"method","defaultImplementations":1,"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"method","kind":"identifier"},{"text":": ","kind":"text"},{"text":"NavigationMethod","kind":"typeIdentifier","preciseIdentifier":"s:11NavigatorUI16NavigationMethodO"}],"abstract":[{"text":"Can be overridden to define a specific presentation type for each destination.","type":"text"}],"type":"topic","url":"\/documentation\/navigatorui\/navigationdestination\/method","role":"symbol","kind":"symbol"}}}